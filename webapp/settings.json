[
    {
        "id": "asst_EqYzhMrvigxbVIAN3D8zItnZ",
        "created_at": 1730643483,
        "description": "This agent is responsible for managing high-level decision-making and delegating tasks to the QueryExecutor agent.",
        "instructions": "./agency_manifesto.md\n\n# CEO Agent Instructions\n\nYou are an agent that manages high-level decision-making and delegates tasks to the QueryExecutor agent within the QueryExecutorAgency.\nYour role is to assign task to QueryExecutor and based on it record decide which visaulization best to use \nWe support all the visualization that is supported by recharts \n### Primary Instructions:\n1. Assess the tasks and objectives provided by the user or other agents.\n2. Delegate specific tasks to the QueryExecutor agent, ensuring clarity and completeness in the instructions.\n3. Monitor the progress of the QueryExecutor agent and provide guidance or adjustments as needed.\n4. Understand how the response can be structured in a way that can be visualised using the recharts \n5. Report back to the user with the outcomes or any necessary feedback.\n\n### Important Note:\n Never ask clarifying question or assume , Always pass the request to QueryExecutor and reply only based on data returned from query executor agent\n Your response should be supporting the visualization support by recharts https://recharts.org/",
        "metadata": {},
        "model": "gpt-4o-2024-08-06",
        "name": "CEOAgent",
        "object": "assistant",
        "tools": [
            {
                "function": {
                    "name": "SendMessage",
                    "description": "Use this tool to facilitate direct, synchronous communication between specialized agents within your agency. When you send a message using this tool, you receive a response exclusively from the designated recipient agent. To continue the dialogue, invoke this tool again with the desired recipient agent and your follow-up message. Remember, communication here is synchronous; the recipient agent won't perform any tasks post-response. You are responsible for relaying the recipient agent's responses back to the user, as the user does not have direct access to these replies. Keep engaging with the tool for continuous interaction until the task is fully resolved. Do not send more than 1 message at a time.",
                    "parameters": {
                        "$defs": {
                            "recipient": {
                                "const": "QueryExecutorAgent",
                                "enum": [
                                    "QueryExecutorAgent"
                                ],
                                "title": "recipient",
                                "type": "string"
                            }
                        },
                        "properties": {
                            "my_primary_instructions": {
                                "description": "Please repeat your primary instructions step-by-step, including both completed and the following next steps that you need to perform. For multi-step, complex tasks, first break them down into smaller steps yourself. Then, issue each step individually to the recipient agent via the message parameter. Each identified step should be sent in separate message. Keep in mind, that the recipient agent does not have access to these instructions. You must include recipient agent-specific instructions in the message or additional_instructions parameters.",
                                "title": "My Primary Instructions",
                                "type": "string"
                            },
                            "recipient": {
                                "allOf": [
                                    {
                                        "$ref": "#/$defs/recipient"
                                    }
                                ],
                                "description": "QueryExecutorAgent: This agent is responsible for translating user requests into executable queries, loading relevant tables, schema, and similar queries, and running the query.\n"
                            },
                            "message": {
                                "description": "Specify the task required for the recipient agent to complete. Focus on clarifying what the task entails, rather than providing exact instructions.",
                                "title": "Message",
                                "type": "string"
                            },
                            "message_files": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "description": "A list of file ids to be sent as attachments to this message. Only use this if you have the file id that starts with 'file-'.",
                                "examples": [
                                    "file-1234",
                                    "file-5678"
                                ],
                                "title": "Message Files"
                            },
                            "additional_instructions": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "description": "Additional context or instructions for the recipient agent about the task. For example, additional information provided by the user or other agents.",
                                "title": "Additional Instructions"
                            }
                        },
                        "required": [
                            "message",
                            "my_primary_instructions",
                            "recipient"
                        ],
                        "type": "object"
                    },
                    "strict": false
                },
                "type": "function"
            }
        ],
        "response_format": {
            "json_schema": {
                "name": "ChartConfig",
                "description": null,
                "schema_": {
                    "$defs": {
                        "DataPoint": {
                            "properties": {
                                "name": {
                                    "description": "The label or name for the data point on the chart.",
                                    "title": "Name",
                                    "type": "string"
                                },
                                "value": {
                                    "description": "The numerical value associated with this data point.",
                                    "title": "Value",
                                    "type": "number"
                                }
                            },
                            "required": [
                                "name",
                                "value"
                            ],
                            "title": "DataPoint",
                            "type": "object",
                            "additionalProperties": false
                        }
                    },
                    "properties": {
                        "chartType": {
                            "description": "The type of chart to render. Supported values are 'line', 'bar',  'pie' and Not Possible in case data points are not suitable for any chart type.",
                            "enum": [
                                "line",
                                "bar",
                                "pie",
                                "Not Possible"
                            ],
                            "title": "Charttype",
                            "type": "string"
                        },
                        "data": {
                            "description": "A list of data points, each containing a 'name' and 'value', to plot on the chart.",
                            "items": {
                                "$ref": "#/$defs/DataPoint"
                            },
                            "title": "Data",
                            "type": "array"
                        },
                        "xAxisKey": {
                            "description": "The key to be used for values on the x-axis. Should match one of the attributes in 'data'.",
                            "title": "Xaxiskey",
                            "type": "string"
                        },
                        "yAxisKey": {
                            "description": "The key to be used for values on the y-axis. Should match one of the attributes in 'data'.",
                            "title": "Yaxiskey",
                            "type": "string"
                        }
                    },
                    "required": [
                        "chartType",
                        "data",
                        "xAxisKey",
                        "yAxisKey"
                    ],
                    "title": "ChartConfig",
                    "type": "object",
                    "additionalProperties": false
                },
                "strict": true
            },
            "type": "json_schema"
        },
        "temperature": 0.3,
        "tool_resources": {
            "code_interpreter": null,
            "file_search": null
        },
        "top_p": 1.0
    },
    {
        "id": "asst_78sw6M1UU1CiiJTX7kuuYdDw",
        "created_at": 1730643484,
        "description": "This agent is responsible for translating user requests into executable queries, loading relevant tables, schema, and similar queries, and running the query.",
        "instructions": "./agency_manifesto.md\n\n# QueryExecutor Agent Instructions\n\nYou are an agent that translates user requests into executable queries within the agenct. \nYour role involves loading relevant tables, schema, and similar queries, executing the queries, and providing results.\n\n### Important note:\nThe dialect of the sql query should be sqllite\n\n### Primary Instructions:\n1. Analyze the user request to determine the required data and query structure.\n2. Load the relevant tables ,schemas and related example queries from TableSchemaLoaderAndRelatedQueriesLoader\n3. Understand the reasoning of related queries to understand how data is organised in table \n4. Generate the queries using table schema ,related queries and reasoning\n5. The related queries is example of queries so treat them aws example not as actual queries that  you need to execute so you are free to modify or use another query\n\n\n",
        "metadata": {},
        "model": "gpt-4o-2024-08-06",
        "name": "QueryExecutorAgent",
        "object": "assistant",
        "tools": [],
        "response_format": {
            "json_schema": {
                "name": "QueryResponse",
                "description": null,
                "schema_": {
                    "$defs": {
                        "RowResponse": {
                            "properties": {
                                "values": {
                                    "description": "Values of a row",
                                    "items": {
                                        "type": "string"
                                    },
                                    "title": "Values",
                                    "type": "array"
                                }
                            },
                            "required": [
                                "values"
                            ],
                            "title": "RowResponse",
                            "type": "object",
                            "additionalProperties": false
                        }
                    },
                    "properties": {
                        "columns": {
                            "description": "List of columns ",
                            "items": {
                                "type": "string"
                            },
                            "title": "Columns",
                            "type": "array"
                        },
                        "rows": {
                            "description": "List of rows",
                            "items": {
                                "$ref": "#/$defs/RowResponse"
                            },
                            "title": "Rows",
                            "type": "array"
                        }
                    },
                    "required": [
                        "columns",
                        "rows"
                    ],
                    "title": "QueryResponse",
                    "type": "object",
                    "additionalProperties": false
                },
                "strict": true
            },
            "type": "json_schema"
        },
        "temperature": 0.3,
        "tool_resources": {
            "code_interpreter": null,
            "file_search": null
        },
        "top_p": 1.0
    }
]